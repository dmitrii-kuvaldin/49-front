// *! объявление переменных

// * через ключевое слово let
// такой переменной можно переприсвоить значение (и даже другого типа данных)
let hello = "hello.js";
// hello = 100;

let student;
// если переменной не присвоено значение она равна undefined
student = "Vladimir";
student = "Mykola";

// * через ключевое слово const
// c const нужно определить значение в момент создания переменной
// нельзя переприсвоить значение

const language = "JavaScript";

// мы не будем использовать var - для работы с переменными

// ! примитивные типы данных в JS

// * 1. string - строка

// при создании строк в js можно использовать двойные, одинарные, косые кавычки
// "Earth", 'Earth', `Earth`
// вопрос выбора - стилизационный, но косые кавычки также используется для особого синтаксиса шаблонных строк для работы с переменными

let planet = "Earth";

// строки можно складывать - это называется конкатенация
let greeting = "Мы с планеты " + planet;
let planetNumber = 3;

// это синтаксис шаблонных строк для работы с логикой и выражениями внутри строк
// пишется с косыми кавычками по бокам и знаком доллара с фигурными скобками - ${  }
let greeting1 = `Мы с планеты ${planet}. Она находится в солнечной системе! Это ${planetNumber} планета от солнца`;

console.log(greeting1);

// *  2. number - число

let n1 = 42;
let n2 = 3.14;
let n3 = -41;

// максимальный number в js
let lastSafeInteger = Number.MAX_SAFE_INTEGER;

// * 3. boolean - булевое значение

let isStudent = true;
let isBackend = false;

// * 4. undefined - неопределенное значение
// не явное указание на отсутствие значение
// часто приходит как результат недопустимых операций

let object;

// * 5. null - пустое значение
// явное указание на отсутствие значение

// отсутствие пользователя
let user = null

